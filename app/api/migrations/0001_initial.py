# Generated by Django 4.1.3 on 2022-12-14 12:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyCustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Почтовый адрес')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('full_name', models.CharField(max_length=255, null=True, verbose_name='ФИО')),
                ('password', models.CharField(max_length=100, verbose_name='Пароль')),
                ('registration_number', models.BigIntegerField(null=True, verbose_name='Регистрационный номер')),
                ('is_head', models.BooleanField(default=False, verbose_name='Руководитель')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Auth_token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255, verbose_name='auth-token')),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('number', models.IntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Номер заявки на продажу')),
                ('product_name', models.TextField(verbose_name='Наименование')),
                ('price', models.FloatField(verbose_name='Цена')),
                ('currency', models.CharField(max_length=10, verbose_name='Валюта')),
                ('full_cost', models.BigIntegerField(verbose_name='Полная цена')),
                ('qntunits', models.CharField(max_length=10, verbose_name='Единица измерения')),
                ('quantity', models.FloatField(verbose_name='Количество')),
                ('validity', models.DateTimeField(verbose_name='Срок действия заявки')),
                ('trade_category', models.CharField(max_length=255, verbose_name='Категория торгов')),
                ('country', models.CharField(max_length=255, null=True, verbose_name='Страна')),
                ('status_in_trade', models.CharField(default=None, max_length=255, verbose_name='Статус в торгах')),
                ('trader', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('purchase_order', models.IntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Заявка на покупку')),
                ('application_date', models.DateTimeField(verbose_name='Дата подачи заявки')),
                ('application_validity_period', models.DateTimeField(verbose_name='Срок действия заявки')),
                ('procurement_name', models.TextField(verbose_name='Наименование покупки')),
                ('product_information', models.TextField(null=True, verbose_name='Информация о товаре')),
                ('brand', models.CharField(max_length=255, null=True, verbose_name='Бренд')),
                ('producing_country', models.CharField(max_length=150, null=True, verbose_name='Страна-производитель')),
                ('buyer_country', models.CharField(max_length=150, null=True, verbose_name='Страна-покупатель')),
                ('qntunits', models.CharField(max_length=30, null=True, verbose_name='Единицы измерения товара')),
                ('terms_of_payment', models.TextField(null=True, verbose_name='Условия оплаты')),
                ('delivery_conditions', models.TextField(null=True, verbose_name='Условия поставки')),
                ('delivery_time', models.CharField(max_length=100, null=True, verbose_name='Время доставки')),
                ('exposure_time', models.DateTimeField(verbose_name='Время экспозиции')),
                ('application_is_bidding', models.CharField(max_length=255, verbose_name='Заявка участвует в торгах')),
                ('price', models.FloatField(verbose_name='Цена (без НДС)')),
                ('number_of_goods', models.IntegerField(verbose_name='Количество товара')),
                ('cost', models.FloatField(verbose_name='Стоимость (без НДС)')),
                ('currency', models.CharField(max_length=50, verbose_name='Валюта')),
                ('technical_documentation_file_name', models.CharField(max_length=100, null=True, verbose_name='Файл технической документации')),
                ('application_link', models.URLField(verbose_name='Ссылка на заявку')),
                ('scraping_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата последнего парсинга')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('comment', models.TextField(blank=True, default=None, null=True, verbose_name='Комментарий')),
                ('tnvedcode', models.BigIntegerField(null=True, verbose_name='Код')),
                ('number_of_subcount', models.IntegerField(null=True, verbose_name='Количество заявок на покупку')),
                ('subcount_link', models.URLField(null=True, verbose_name='Заявки на покупку')),
                ('status', models.CharField(choices=[('ACTIVE', 'Активные'), ('INACTIVE', 'Неактивные')], default='ACTIVE', max_length=30)),
                ('trade_status', models.CharField(choices=[(1, 'Направление предложений'), (2, 'Закрытый период'), (4, 'Итоги торгов')], default=None, max_length=100, null=True, verbose_name='Статус торгов')),
                ('trade_status_message', models.CharField(default=None, max_length=255, null=True)),
                ('offer', models.ManyToManyField(to='api.offer')),
                ('trader', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-application_date'],
            },
        ),
    ]
